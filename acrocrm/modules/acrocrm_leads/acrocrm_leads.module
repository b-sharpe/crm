<?php
/**
 * @file
 * Leads module for AcroCRM
 */

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param $path
 *  Path of the site to display help
 * @param $arg
 *  Array that holds the current path returned by the arg() function.
 * @return string
 *  Ant HTML string
 */
function acrocrm_leads_help($path, $arg) {
  switch ($path) {
    case "admin/help#acrocrm_leads":
      return '<p>' . t("Leads module for AcroCRM") . '</p>';
      break;
  }
}

/**
 * Implements hook_menu
 */
function acrocrm_leads_menu() {
  $items = array();

  $items['acrocrm_leads/overview'] = array(
    'title' => 'AcroCRM Leads Overview',
    'description' => 'AcroCRM Leads Overview',
    'page callback' => 'acrocrm_leads_overview_page',
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc'
  );

  $items['acrocrm_leads/new_lead'] = array(
    'title' => 'AcroCRM New Lead',
    'description' => 'AcroCRM New Lead Page',
    'page callback' => 'acrocrm_leads_new_lead_page',
    'access arguments' => array('access acrocrm'),
    'file' => 'includes/acrocrm_leads.pages.inc'
  );

  $items['admin/config/acrocrm/acrocrm_leads'] = array(
    'title' => 'AcroCRM Leads Contact form',
    'description' => 'Configuration for the AcroCRM Leads Contact form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('acrocrm_leads_contact_form_settings_form'),
    'access arguments' => array('access administration pages'),
    'file' => 'includes/acrocrm_leads.forms.inc',
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}


function acrocrm_leads_theme() {
  return array(
    'acrocrm_leads_content_array' => array(
      // We use 'render element' when the item to be passed is a self-describing
      // render array (it will have #theme_wrappers)
      'render element' => 'element',
    )
  );
}

function acrocrm_leads_page_alter(&$page) {
  // Populate nav menu
  $page['sidebar_first']['acrocrm_leads'] = array(
    '#markup' => '
          <li>
            <a href=""><i class="fa fa-fw"></i>Leads<span class="fa arrow"></span></a>
            <ul class="nav nav-second-level">
              <li>
                <a href="?q=acrocrm_leads/overview">Overview</a>
               </li>
               <li>
                <a href="?q=acrocrm_leads/new_lead">New Lead</a>
               </li>
            </ul>
          </li>'
  );
}

/**
 * Implements hook_theme_registry_alter().
 */
function acrocrm_leads_theme_registry_alter(&$theme_registry) {
// Defined path to the current module.
  $module_path = drupal_get_path('module', 'acrocrm_leads');
// Find all .tpl.php files in this module's folder recursively.
  $template_file_objects = drupal_find_theme_templates($theme_registry, '.tpl.php', $module_path);
// Iterate through all found template file objects.
  foreach ($template_file_objects as $key => $template_file_object) {
    // If the template has not already been overridden by a theme.
    if (!isset($theme_registry[$key]['theme path']) || !preg_match('#/themes/#', $theme_registry[$key]['theme path'])) {
      // Alter the theme path and template elements.
      $theme_registry[$key]['theme path'] = $module_path;
      $theme_registry[$key] = array_merge($theme_registry[$key], $template_file_object);
      $theme_registry[$key]['type'] = 'module';
    }
  }
}

/**
 * Implements hook_block_info().
 */
function acrocrm_leads_block_info() {
  $blocks['acrocrm_leads_contact'] = array(
    // Name that will appear in the block lists.
    'info' => t('AcroCRM Leads Contact form'),
    'file' => 'includes/acrocrm_leads.forms.inc',
    // Default setting
    'cache' => DRUPAL_CACHE_PER_ROLE
  );
  return $blocks;
}

function acrocrm_leads_block_view($delta = '') {
  switch ($delta) {
    case 'acrocrm_leads_contact':
      $block['subject'] = t('Contact form');
      $form = drupal_get_form('acrocrm_leads_contact_form');
      $block['content'] = drupal_render($form);
      return $block;
  }
}

/**************************************************************
 * Contact form for block. I can't seem to figure out how to
 * put it in another file...
 * /**************************************************************
 *
 * /**
 * Form callback: website visitor contact.
 */
function acrocrm_leads_contact_form($form, &$form_state) {
  $nameFieldType = variable_get('name_field', 'name');

  $form['contact_firstname'] = array(
    '#type' => 'textfield',
    '#title' => 'First Name',
    '#size' => 50,
    '#maxlength' => 50,
    '#required' => FALSE,
    '#access' => $nameFieldType == 'name' ? FALSE : TRUE
  );


  $form['contact_name'] = array(
    '#type' => 'textfield',
    '#title' => $nameFieldType == 'name' ? 'Name' : 'Last Name',
    '#size' => 50,
    '#maxlength' => 50,
    '#required' => TRUE
  );


  $form['contact_email'] = array(
    '#type' => 'textfield',
    '#title' => t('Email'),
    '#size' => 50,
    '#maxlength' => 50,
    '#required' => TRUE
  );

  $form['contact_phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Phone Number'),
    '#size' => 32,
    '#maxlength' => 15,
    '#required' => FALSE
  );

  $form['contact_comments'] = array(
    '#type' => 'textarea',
    '#title' => t('Comments'),
    '#maxlength' => 1000,
    '#required' => TRUE
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Submit callback for acrocrm_leads_contact_form().
 */
function acrocrm_leads_contact_form_submit($form, $form_state) {
  db_insert('leads')
    ->fields(array(
               'name' => $form_state['values']['contact_name'],
               'firstname' => $form_state['values']['contact_firstname'],
               'email' => $form_state['values']['contact_email'],
               'phone' => $form_state['values']['contact_phone'],
               'comments' => $form_state['values']['contact_comments']))
    ->execute();
  drupal_set_message(t('Your comment has been sent successfully.'));
}